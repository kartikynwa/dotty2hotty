"
" PATH=.config/nvim/init.vim

"=======================
"  dein Scripts
"=======================
if &compatible
  set nocompatible               " Be iMproved
endif

" required:
set runtimepath+=/home/kartik/.config/nvim/dein//repos/github.com/Shougo/dein.vim

" required:
if dein#load_state('/home/kartik/.config/nvim/dein/')
  call dein#begin('/home/kartik/.config/nvim/dein/')

  " Let dein manage dein
  " required:
  call dein#add('/home/kartik/.config/nvim/dein//repos/github.com/Shougo/dein.vim')

  " Add or remove your plugins here:
  call dein#add('w0ng/vim-hybrid')
  call dein#add('tpope/vim-surround')
  call dein#add('vim-airline/vim-airline')
  call dein#add('vim-airline/vim-airline-themes')
  call dein#add('junegunn/goyo.vim')
  call dein#add('Shougo/deoplete.nvim')
"  call dein#add('ervandew/supertab') " conflicts with deoplete
  call dein#add('ternjs/tern_for_vim', { 'build' : 'npm install'})
  call dein#add('SirVer/ultisnips')
  call dein#add('honza/vim-snippets')
  call dein#add('godlygeek/tabular')

  " this one is a bad boy. please read instructions.
  " to install, you need to increase dein timeout limit.
  " cool, huh?
  " actually fuck this shit lol
  " call dein#add('Valloric/YouCompleteMe')
  

  " You can specify revision/branch/tag.
  " call dein#add('Shougo/vimshell', { 'rev': '3787e5' })

  " required:
  call dein#end()
  call dein#save_state()
endif

" If you want to install not installed plugins on startup.
"if dein#check_install()
"  call dein#install()
"endif

"End dein Scripts-------------------------

"====================
"  Colors
"====================

if (has("termguicolors"))
    set termguicolors
endif

" need to install fonts, airline theme is hybrid
let g:airline_powerline_fonts = 1

let g:hybrid_custom_term_colors = 1
" reduced contrast palette for hybrid colorscheme
" let g:hybrid_reduced_contrast = 1
colorscheme hybrid
set background=dark

"=====================
"  Vim UI
"====================

filetype plugin indent on  " filetype detection plugin and indent
syntax enable              " syntax highlighting
set nohlsearch             " no persistent higlighting of search
set incsearch              " highlight while searching tho
set nowrap                 " don't wrap lines please
set number                 " show line numbers
set laststatus=2           " last window always has a status line
set backspace=2            " don't know what this does sorry
set ruler                  " show info along the bottom
set showcmd                
set showmode
set splitbelow             " split window goes below

"========================
"  Completetion (kill me)
"========================

let g:deoplete#enable_at_startup = 1
if !exists('g:deoplete#omni#input_patterns')
  let g:deoplete#omni#input_patterns = {}
endif
" let g:deoplete#disable_auto_complete = 1
autocmd InsertLeave,CompleteDone * if pumvisible() == 0 | pclose | endif

" omnifuncs
augroup omnifuncs
  autocmd!
  autocmd FileType css setlocal omnifunc=csscomplete#CompleteCSS
  autocmd FileType html,markdown setlocal omnifunc=htmlcomplete#CompleteTags
  autocmd FileType javascript setlocal omnifunc=javascriptcomplete#CompleteJS
  autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
  autocmd FileType xml setlocal omnifunc=xmlcomplete#CompleteTags
augroup end
" tern
let g:tern_show_argument_hints = 'on_hold'
let g:tern_show_signature_in_pum = 1
autocmd FileType javascript setlocal omnifunc=tern#Complete

" deoplete tab-complete
inoremap <expr><tab> pumvisible() ? "\<c-n>" : "\<tab>"
" tern
autocmd FileType javascript nnoremap <silent> <buffer> gb :TernDef<CR>

" remap TAB
autocmd FileType javascript let g:SuperTabDefaultCompletionType = "<c-x><c-o>"
let g:UltiSnipsExpandTrigger="<C-j>"
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

" close the preview window when you're not using it
let g:SuperTabClosePreviewOnPopupClose = 1

"====================
"  Fromatting
"====================

set autoindent
set cindent
set shiftwidth=2           " ---------------
set tabstop=2              " tab = 2 columns
set softtabstop=2          " ---------------
set smarttab               " tabs at the beginning of linees
set expandtab              " tabs to spaces everywhere else
